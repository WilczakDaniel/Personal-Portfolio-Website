{"mappings":"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","sources":["js/config.js","js/model.js","node_modules/canvas-confetti/dist/confetti.module.mjs","js/helpers.js","js/gridView.js","js/boardView.js","js/cellView.js","js/statisticsView.js","js/scoreView.js","script.js"],"sourcesContent":["// IN vh\r\nexport const CELL_WIDTH = { easy: 4, med: 3.5, hard: 2.8 };\r\nexport const CELL_HEIGHT = { easy: 4, med: 3.5, hard: 2.8 };\r\n// export const CELL_WIDTH = { easy: 4, med: 3.5, hard: 3 };\r\n// export const CELL_HEIGHT = { easy: 4, med: 3.5, hard: 3 };\r\n\r\nexport const LONG_CLICK_MS = 200;\r\n\r\nexport const PHONE_WIDTH = 640;\r\n\r\nexport const CONFETTI_COLORS = [\r\n    [\"#a2d149\", \"#aad751\", \"#69C65C\", \"#E3D356\", \"#879762\", \"#9FCC46\", \"#5A8800\"],\r\n    [\"#DB3236\", \"#992326\", \"#e67072\", \"#DE978D\", \"#9C6D71\", \"#FFA394\", \"#FF5F74\"],\r\n    [\"#F4840D\", \"#ab5c09\", \"#f7a956\", \"#906442\", \"#FFF6EC\", \"#FF9255\", \"#FFBFBD\"],\r\n    [\"#F4C20D\", \"#ab8809\", \"#f6ce3d\", \"#AFBA00\", \"#FFF8E6\", \"#FFBB82\", \"#D5A700\"],\r\n    [\"#008342\", \"#005c2e\", \"#4da87b\", \"#2A9855\", \"#8FF8AD\", \"#007E3D\", \"#18C468\"],\r\n    [\"#4885ED\", \"#325da6\", \"#7faaf2\", \"#00CBEB\", \"#00ACFF\", \"#003A94\", \"#CAF4FF\"],\r\n    [\"#4BDDE7\", \"#359ba2\", \"#81e7ee\", \"#6DF1BF\", \"#4DA3EC\", \"#4FE0EA\", \"#00B0BA\"],\r\n    [\"#B349EC\", \"#7d33a5\", \"#ca80f2\", \"#FF34BA\", \"#FFC5FF\", \"#962BCF\", \"#9529CE\"],\r\n    [\"#D852A6\", \"#973974\", \"#e486c1\", \"#FF628D\", \"#FFA7FA\", \"#98006D\", \"#B73189\"],\r\n];\r\n\r\nexport const TEXT_COLORS = {\r\n    1: \"#1976d2\",\r\n    2: \"#388e3c\",\r\n    3: \"#d32f2f\",\r\n    4: \"#7b1fa2\",\r\n    5: \"#ff8f00\",\r\n    6: \"#0097a7\",\r\n    7: \"#424242\",\r\n};\r\n\r\nexport const INITIAL_BORDER_VALUE =\r\n    \"inset 0 1px 3px rgba(255, 255, 255, 0.18), inset 0 4px 1px -2px var(--border-initial), inset -4px 0 1px -2px var(--border-initial), inset 0 -4px 1px -2px var(--border-initial), inset 4px 0 1px -2px var(--border-initial);\";\r\n\r\nexport const FIRST_BORDER = \"inset 0 1px 3px rgba(255, 255, 255, 0.18)\";\r\n\r\nexport const BORDER_INITIAL = {\r\n    top: \"inset 0 4px 1px -2px var(--border-initial)\",\r\n    right: \"inset -4px 0 1px -2px var(--border-initial)\",\r\n    bottom: \"inset 0 -4px 1px -2px var(--border-initial)\",\r\n    left: \"inset 4px 0 1px -2px var(--border-initial)\",\r\n};\r\n\r\nexport const BORDER_CHANGED = {\r\n    top: \"inset 0 4px 1px -2px var(--border-changed)\",\r\n    right: \"inset -4px 0 1px -2px var(--border-changed)\",\r\n    bottom: \"inset 0 -4px 1px -2px var(--border-changed)\",\r\n    left: \"inset 4px 0 1px -2px var(--border-changed)\",\r\n};\r\n","import { PHONE_WIDTH } from \"./config\";\r\n\r\nclass State {\r\n    difficulty = {\r\n        // columns, rows, bombs\r\n        easy: [10, 8, 10],\r\n        med: [18, 14, 40],\r\n        hard: [24, 20, 99],\r\n    };\r\n\r\n    phoneDifficulty = {\r\n        // columns, rows, bombs\r\n        easy: [6, 11, 10],\r\n        med: [11, 18, 35],\r\n        hard: [15, 25, 75],\r\n    };\r\n    #flagCordsQueue = [];\r\n    #cellsNumbers;\r\n    #movesCounter = 0;\r\n    #flagCounter;\r\n    #actualDifficulty = \"med\";\r\n    #unopenedCellsCounter;\r\n    #unopenedCells = [];\r\n    #flagCords = [];\r\n    #bombCells = [];\r\n    #highScore = {\r\n        easy: 0,\r\n        med: 0,\r\n        hard: 0,\r\n    };\r\n    #clientWidth;\r\n    #startTouch;\r\n    #timeoutID;\r\n    #allCells;\r\n\r\n    getHighscore() {\r\n        return this.#highScore[this.#actualDifficulty];\r\n    }\r\n\r\n    setAllCells(obj) {\r\n        this.#allCells = obj;\r\n    }\r\n\r\n    getSettings() {\r\n        const obj = this.deviceIsPhone() ? this.phoneDifficulty : this.difficulty;\r\n        return obj[this.#actualDifficulty];\r\n    }\r\n\r\n    setClientWidth(width) {\r\n        this.#clientWidth = width;\r\n    }\r\n\r\n    deviceIsPhone() {\r\n        return this.#clientWidth < PHONE_WIDTH;\r\n    }\r\n\r\n    getScoreFromLocalStorage() {\r\n        const data = localStorage.getItem(\"highscores\");\r\n        if (!data) return;\r\n        this.#highScore = JSON.parse(data);\r\n    }\r\n\r\n    startTouchTimer() {\r\n        this.#startTouch = new Date();\r\n    }\r\n\r\n    setTimeoutID(timeoutId) {\r\n        this.#timeoutID = timeoutId;\r\n    }\r\n\r\n    resetTimeoutID() {\r\n        clearTimeout(this.#timeoutID);\r\n        this.#timeoutID = undefined;\r\n    }\r\n\r\n    endTouchTimer() {\r\n        return new Date() - this.#startTouch;\r\n    }\r\n\r\n    #saveToLocalStorage() {\r\n        localStorage.setItem(\"highscores\", JSON.stringify(this.#highScore));\r\n    }\r\n\r\n    checkForHighScore(score) {\r\n        if (this.#highScore[this.#actualDifficulty] === 0) return true;\r\n\r\n        return score < this.#highScore[this.#actualDifficulty];\r\n    }\r\n\r\n    saveHighScore(score) {\r\n        this.#highScore[this.#actualDifficulty] = score;\r\n        this.#saveToLocalStorage();\r\n    }\r\n\r\n    getAllCellsWithBombs() {\r\n        for (let key in this.#cellsNumbers) {\r\n            if (this.#cellsNumbers[key] > 50) this.#bombCells.push(key);\r\n        }\r\n        return this.#bombCells;\r\n    }\r\n\r\n    flagCordsAreQueued(cords) {\r\n        return this.#flagCordsQueue.includes(cords);\r\n    }\r\n\r\n    addFlagCordsToQueue(cords) {\r\n        this.#flagCordsQueue.push(cords);\r\n    }\r\n    deleteCordsFromQueue(cords) {\r\n        const index = this.#flagCordsQueue.indexOf(cords);\r\n        this.#flagCordsQueue.splice(index, 1);\r\n    }\r\n\r\n    getAllCellsWithNumbers() {\r\n        const cellsWithNumbers = [];\r\n        for (let key in this.#cellsNumbers) {\r\n            if (this.#cellsNumbers[key] >= 0 && this.#cellsNumbers[key] <= 9)\r\n                cellsWithNumbers.push(key);\r\n\r\n            if (this.#cellsNumbers[key] > 50) this.#bombCells.push(key);\r\n        }\r\n        return cellsWithNumbers;\r\n    }\r\n\r\n    cordsHaveFlag(cords) {\r\n        return this.#flagCords.includes(cords);\r\n    }\r\n\r\n    getElementsWithFlags() {\r\n        const elementsWithFlag = this.#flagCords.map(cords => {\r\n            if (!this.cordsHaveFlag(cords)) return;\r\n            return this.#allCells[cords];\r\n        });\r\n\r\n        return elementsWithFlag;\r\n    }\r\n\r\n    getFlagsCounter() {\r\n        return this.#flagCounter;\r\n    }\r\n\r\n    deleteFlagCords(cords) {\r\n        const index = this.#flagCords.indexOf(cords);\r\n        if (index > -1) {\r\n            this.#flagCords.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    addFlagCords(cords) {\r\n        this.#flagCords.push(cords);\r\n    }\r\n\r\n    setFlagCounter(diff) {\r\n        this.#flagCounter = this.difficulty[diff][2];\r\n        return this.#flagCounter;\r\n    }\r\n\r\n    isGameFinished() {\r\n        return this.#unopenedCellsCounter - this.#unopenedCells.length === 0;\r\n    }\r\n\r\n    saveOpenedCells(cords) {\r\n        cords.forEach(el => {\r\n            if (this.#unopenedCells.includes(el)) return;\r\n            this.#unopenedCells.push(el);\r\n        });\r\n    }\r\n\r\n    setActualDifficulty(diff) {\r\n        this.#actualDifficulty = diff;\r\n        this.#setUnopenedCellsCounter(diff);\r\n    }\r\n\r\n    #setUnopenedCellsCounter(diff) {\r\n        const settingsObj = this.deviceIsPhone() ? this.phoneDifficulty : this.difficulty;\r\n        const value = settingsObj[diff][0] * settingsObj[diff][1] - settingsObj[diff][2];\r\n        this.#unopenedCellsCounter = value;\r\n    }\r\n\r\n    reset() {\r\n        this.#movesCounter = 0;\r\n        this.#cellsNumbers = undefined;\r\n        this.#flagCounter = undefined;\r\n        this.#unopenedCells.length = 0;\r\n        this.#flagCords.length = 0;\r\n        this.#bombCells.length = 0;\r\n    }\r\n\r\n    getActualDifficulty() {\r\n        return this.#actualDifficulty;\r\n    }\r\n\r\n    increaseFlagCounter() {\r\n        this.#flagCounter++;\r\n        return this.#flagCounter;\r\n    }\r\n\r\n    decreaseFlagCounter() {\r\n        this.#flagCounter--;\r\n        return this.#flagCounter;\r\n    }\r\n\r\n    cellIsNumber(cords) {\r\n        return this.#cellsNumbers[cords] < 50 && this.#cellsNumbers[cords] > 0;\r\n    }\r\n\r\n    getCellNumber(cords) {\r\n        return this.#cellsNumbers[cords];\r\n    }\r\n\r\n    movesCounterAdd() {\r\n        this.#movesCounter++;\r\n    }\r\n\r\n    getMovesCounter() {\r\n        return this.#movesCounter;\r\n    }\r\n\r\n    getAllCells() {\r\n        return this.#allCells;\r\n    }\r\n\r\n    setCellsNumbers(obj) {\r\n        this.#cellsNumbers = obj;\r\n    }\r\n\r\n    getCellsNumbers(obj) {\r\n        return this.#cellsNumbers;\r\n    }\r\n\r\n    updateCellsNumbers(obj) {\r\n        for (const key in this.#cellsNumbers) {\r\n            if (obj.hasOwnProperty([key])) {\r\n                this.#cellsNumbers[key] = obj[key];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default new State();\r\n","// canvas-confetti v1.5.1 built on 2022-02-08T22:20:40.944Z\nvar module = {};\n\n// source content\n(function main(global, module, isWorker, workerSize) {\n  var canUseWorker = !!(\n    global.Worker &&\n    global.Blob &&\n    global.Promise &&\n    global.OffscreenCanvas &&\n    global.OffscreenCanvasRenderingContext2D &&\n    global.HTMLCanvasElement &&\n    global.HTMLCanvasElement.prototype.transferControlToOffscreen &&\n    global.URL &&\n    global.URL.createObjectURL);\n\n  function noop() {}\n\n  // create a promise if it exists, otherwise, just\n  // call the function directly\n  function promise(func) {\n    var ModulePromise = module.exports.Promise;\n    var Prom = ModulePromise !== void 0 ? ModulePromise : global.Promise;\n\n    if (typeof Prom === 'function') {\n      return new Prom(func);\n    }\n\n    func(noop, noop);\n\n    return null;\n  }\n\n  var raf = (function () {\n    var TIME = Math.floor(1000 / 60);\n    var frame, cancel;\n    var frames = {};\n    var lastFrameTime = 0;\n\n    if (typeof requestAnimationFrame === 'function' && typeof cancelAnimationFrame === 'function') {\n      frame = function (cb) {\n        var id = Math.random();\n\n        frames[id] = requestAnimationFrame(function onFrame(time) {\n          if (lastFrameTime === time || lastFrameTime + TIME - 1 < time) {\n            lastFrameTime = time;\n            delete frames[id];\n\n            cb();\n          } else {\n            frames[id] = requestAnimationFrame(onFrame);\n          }\n        });\n\n        return id;\n      };\n      cancel = function (id) {\n        if (frames[id]) {\n          cancelAnimationFrame(frames[id]);\n        }\n      };\n    } else {\n      frame = function (cb) {\n        return setTimeout(cb, TIME);\n      };\n      cancel = function (timer) {\n        return clearTimeout(timer);\n      };\n    }\n\n    return { frame: frame, cancel: cancel };\n  }());\n\n  var getWorker = (function () {\n    var worker;\n    var prom;\n    var resolves = {};\n\n    function decorate(worker) {\n      function execute(options, callback) {\n        worker.postMessage({ options: options || {}, callback: callback });\n      }\n      worker.init = function initWorker(canvas) {\n        var offscreen = canvas.transferControlToOffscreen();\n        worker.postMessage({ canvas: offscreen }, [offscreen]);\n      };\n\n      worker.fire = function fireWorker(options, size, done) {\n        if (prom) {\n          execute(options, null);\n          return prom;\n        }\n\n        var id = Math.random().toString(36).slice(2);\n\n        prom = promise(function (resolve) {\n          function workerDone(msg) {\n            if (msg.data.callback !== id) {\n              return;\n            }\n\n            delete resolves[id];\n            worker.removeEventListener('message', workerDone);\n\n            prom = null;\n            done();\n            resolve();\n          }\n\n          worker.addEventListener('message', workerDone);\n          execute(options, id);\n\n          resolves[id] = workerDone.bind(null, { data: { callback: id }});\n        });\n\n        return prom;\n      };\n\n      worker.reset = function resetWorker() {\n        worker.postMessage({ reset: true });\n\n        for (var id in resolves) {\n          resolves[id]();\n          delete resolves[id];\n        }\n      };\n    }\n\n    return function () {\n      if (worker) {\n        return worker;\n      }\n\n      if (!isWorker && canUseWorker) {\n        var code = [\n          'var CONFETTI, SIZE = {}, module = {};',\n          '(' + main.toString() + ')(this, module, true, SIZE);',\n          'onmessage = function(msg) {',\n          '  if (msg.data.options) {',\n          '    CONFETTI(msg.data.options).then(function () {',\n          '      if (msg.data.callback) {',\n          '        postMessage({ callback: msg.data.callback });',\n          '      }',\n          '    });',\n          '  } else if (msg.data.reset) {',\n          '    CONFETTI.reset();',\n          '  } else if (msg.data.resize) {',\n          '    SIZE.width = msg.data.resize.width;',\n          '    SIZE.height = msg.data.resize.height;',\n          '  } else if (msg.data.canvas) {',\n          '    SIZE.width = msg.data.canvas.width;',\n          '    SIZE.height = msg.data.canvas.height;',\n          '    CONFETTI = module.exports.create(msg.data.canvas);',\n          '  }',\n          '}',\n        ].join('\\n');\n        try {\n          worker = new Worker(URL.createObjectURL(new Blob([code])));\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          typeof console !== undefined && typeof console.warn === 'function' ? console.warn('🎊 Could not load worker', e) : null;\n\n          return null;\n        }\n\n        decorate(worker);\n      }\n\n      return worker;\n    };\n  })();\n\n  var defaults = {\n    particleCount: 50,\n    angle: 90,\n    spread: 45,\n    startVelocity: 45,\n    decay: 0.9,\n    gravity: 1,\n    drift: 0,\n    ticks: 200,\n    x: 0.5,\n    y: 0.5,\n    shapes: ['square', 'circle'],\n    zIndex: 100,\n    colors: [\n      '#26ccff',\n      '#a25afd',\n      '#ff5e7e',\n      '#88ff5a',\n      '#fcff42',\n      '#ffa62d',\n      '#ff36ff'\n    ],\n    // probably should be true, but back-compat\n    disableForReducedMotion: false,\n    scalar: 1\n  };\n\n  function convert(val, transform) {\n    return transform ? transform(val) : val;\n  }\n\n  function isOk(val) {\n    return !(val === null || val === undefined);\n  }\n\n  function prop(options, name, transform) {\n    return convert(\n      options && isOk(options[name]) ? options[name] : defaults[name],\n      transform\n    );\n  }\n\n  function onlyPositiveInt(number){\n    return number < 0 ? 0 : Math.floor(number);\n  }\n\n  function randomInt(min, max) {\n    // [min, max)\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function toDecimal(str) {\n    return parseInt(str, 16);\n  }\n\n  function colorsToRgb(colors) {\n    return colors.map(hexToRgb);\n  }\n\n  function hexToRgb(str) {\n    var val = String(str).replace(/[^0-9a-f]/gi, '');\n\n    if (val.length < 6) {\n        val = val[0]+val[0]+val[1]+val[1]+val[2]+val[2];\n    }\n\n    return {\n      r: toDecimal(val.substring(0,2)),\n      g: toDecimal(val.substring(2,4)),\n      b: toDecimal(val.substring(4,6))\n    };\n  }\n\n  function getOrigin(options) {\n    var origin = prop(options, 'origin', Object);\n    origin.x = prop(origin, 'x', Number);\n    origin.y = prop(origin, 'y', Number);\n\n    return origin;\n  }\n\n  function setCanvasWindowSize(canvas) {\n    canvas.width = document.documentElement.clientWidth;\n    canvas.height = document.documentElement.clientHeight;\n  }\n\n  function setCanvasRectSize(canvas) {\n    var rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n  }\n\n  function getCanvas(zIndex) {\n    var canvas = document.createElement('canvas');\n\n    canvas.style.position = 'fixed';\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style.pointerEvents = 'none';\n    canvas.style.zIndex = zIndex;\n\n    return canvas;\n  }\n\n  function ellipse(context, x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n    context.save();\n    context.translate(x, y);\n    context.rotate(rotation);\n    context.scale(radiusX, radiusY);\n    context.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\n    context.restore();\n  }\n\n  function randomPhysics(opts) {\n    var radAngle = opts.angle * (Math.PI / 180);\n    var radSpread = opts.spread * (Math.PI / 180);\n\n    return {\n      x: opts.x,\n      y: opts.y,\n      wobble: Math.random() * 10,\n      wobbleSpeed: Math.min(0.11, Math.random() * 0.1 + 0.05),\n      velocity: (opts.startVelocity * 0.5) + (Math.random() * opts.startVelocity),\n      angle2D: -radAngle + ((0.5 * radSpread) - (Math.random() * radSpread)),\n      tiltAngle: (Math.random() * (0.75 - 0.25) + 0.25) * Math.PI,\n      color: opts.color,\n      shape: opts.shape,\n      tick: 0,\n      totalTicks: opts.ticks,\n      decay: opts.decay,\n      drift: opts.drift,\n      random: Math.random() + 2,\n      tiltSin: 0,\n      tiltCos: 0,\n      wobbleX: 0,\n      wobbleY: 0,\n      gravity: opts.gravity * 3,\n      ovalScalar: 0.6,\n      scalar: opts.scalar\n    };\n  }\n\n  function updateFetti(context, fetti) {\n    fetti.x += Math.cos(fetti.angle2D) * fetti.velocity + fetti.drift;\n    fetti.y += Math.sin(fetti.angle2D) * fetti.velocity + fetti.gravity;\n    fetti.wobble += fetti.wobbleSpeed;\n    fetti.velocity *= fetti.decay;\n    fetti.tiltAngle += 0.1;\n    fetti.tiltSin = Math.sin(fetti.tiltAngle);\n    fetti.tiltCos = Math.cos(fetti.tiltAngle);\n    fetti.random = Math.random() + 2;\n    fetti.wobbleX = fetti.x + ((10 * fetti.scalar) * Math.cos(fetti.wobble));\n    fetti.wobbleY = fetti.y + ((10 * fetti.scalar) * Math.sin(fetti.wobble));\n\n    var progress = (fetti.tick++) / fetti.totalTicks;\n\n    var x1 = fetti.x + (fetti.random * fetti.tiltCos);\n    var y1 = fetti.y + (fetti.random * fetti.tiltSin);\n    var x2 = fetti.wobbleX + (fetti.random * fetti.tiltCos);\n    var y2 = fetti.wobbleY + (fetti.random * fetti.tiltSin);\n\n    context.fillStyle = 'rgba(' + fetti.color.r + ', ' + fetti.color.g + ', ' + fetti.color.b + ', ' + (1 - progress) + ')';\n    context.beginPath();\n\n    if (fetti.shape === 'circle') {\n      context.ellipse ?\n        context.ellipse(fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI) :\n        ellipse(context, fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI);\n    } else {\n      context.moveTo(Math.floor(fetti.x), Math.floor(fetti.y));\n      context.lineTo(Math.floor(fetti.wobbleX), Math.floor(y1));\n      context.lineTo(Math.floor(x2), Math.floor(y2));\n      context.lineTo(Math.floor(x1), Math.floor(fetti.wobbleY));\n    }\n\n    context.closePath();\n    context.fill();\n\n    return fetti.tick < fetti.totalTicks;\n  }\n\n  function animate(canvas, fettis, resizer, size, done) {\n    var animatingFettis = fettis.slice();\n    var context = canvas.getContext('2d');\n    var animationFrame;\n    var destroy;\n\n    var prom = promise(function (resolve) {\n      function onDone() {\n        animationFrame = destroy = null;\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        done();\n        resolve();\n      }\n\n      function update() {\n        if (isWorker && !(size.width === workerSize.width && size.height === workerSize.height)) {\n          size.width = canvas.width = workerSize.width;\n          size.height = canvas.height = workerSize.height;\n        }\n\n        if (!size.width && !size.height) {\n          resizer(canvas);\n          size.width = canvas.width;\n          size.height = canvas.height;\n        }\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        animatingFettis = animatingFettis.filter(function (fetti) {\n          return updateFetti(context, fetti);\n        });\n\n        if (animatingFettis.length) {\n          animationFrame = raf.frame(update);\n        } else {\n          onDone();\n        }\n      }\n\n      animationFrame = raf.frame(update);\n      destroy = onDone;\n    });\n\n    return {\n      addFettis: function (fettis) {\n        animatingFettis = animatingFettis.concat(fettis);\n\n        return prom;\n      },\n      canvas: canvas,\n      promise: prom,\n      reset: function () {\n        if (animationFrame) {\n          raf.cancel(animationFrame);\n        }\n\n        if (destroy) {\n          destroy();\n        }\n      }\n    };\n  }\n\n  function confettiCannon(canvas, globalOpts) {\n    var isLibCanvas = !canvas;\n    var allowResize = !!prop(globalOpts || {}, 'resize');\n    var globalDisableForReducedMotion = prop(globalOpts, 'disableForReducedMotion', Boolean);\n    var shouldUseWorker = canUseWorker && !!prop(globalOpts || {}, 'useWorker');\n    var worker = shouldUseWorker ? getWorker() : null;\n    var resizer = isLibCanvas ? setCanvasWindowSize : setCanvasRectSize;\n    var initialized = (canvas && worker) ? !!canvas.__confetti_initialized : false;\n    var preferLessMotion = typeof matchMedia === 'function' && matchMedia('(prefers-reduced-motion)').matches;\n    var animationObj;\n\n    function fireLocal(options, size, done) {\n      var particleCount = prop(options, 'particleCount', onlyPositiveInt);\n      var angle = prop(options, 'angle', Number);\n      var spread = prop(options, 'spread', Number);\n      var startVelocity = prop(options, 'startVelocity', Number);\n      var decay = prop(options, 'decay', Number);\n      var gravity = prop(options, 'gravity', Number);\n      var drift = prop(options, 'drift', Number);\n      var colors = prop(options, 'colors', colorsToRgb);\n      var ticks = prop(options, 'ticks', Number);\n      var shapes = prop(options, 'shapes');\n      var scalar = prop(options, 'scalar');\n      var origin = getOrigin(options);\n\n      var temp = particleCount;\n      var fettis = [];\n\n      var startX = canvas.width * origin.x;\n      var startY = canvas.height * origin.y;\n\n      while (temp--) {\n        fettis.push(\n          randomPhysics({\n            x: startX,\n            y: startY,\n            angle: angle,\n            spread: spread,\n            startVelocity: startVelocity,\n            color: colors[temp % colors.length],\n            shape: shapes[randomInt(0, shapes.length)],\n            ticks: ticks,\n            decay: decay,\n            gravity: gravity,\n            drift: drift,\n            scalar: scalar\n          })\n        );\n      }\n\n      // if we have a previous canvas already animating,\n      // add to it\n      if (animationObj) {\n        return animationObj.addFettis(fettis);\n      }\n\n      animationObj = animate(canvas, fettis, resizer, size , done);\n\n      return animationObj.promise;\n    }\n\n    function fire(options) {\n      var disableForReducedMotion = globalDisableForReducedMotion || prop(options, 'disableForReducedMotion', Boolean);\n      var zIndex = prop(options, 'zIndex', Number);\n\n      if (disableForReducedMotion && preferLessMotion) {\n        return promise(function (resolve) {\n          resolve();\n        });\n      }\n\n      if (isLibCanvas && animationObj) {\n        // use existing canvas from in-progress animation\n        canvas = animationObj.canvas;\n      } else if (isLibCanvas && !canvas) {\n        // create and initialize a new canvas\n        canvas = getCanvas(zIndex);\n        document.body.appendChild(canvas);\n      }\n\n      if (allowResize && !initialized) {\n        // initialize the size of a user-supplied canvas\n        resizer(canvas);\n      }\n\n      var size = {\n        width: canvas.width,\n        height: canvas.height\n      };\n\n      if (worker && !initialized) {\n        worker.init(canvas);\n      }\n\n      initialized = true;\n\n      if (worker) {\n        canvas.__confetti_initialized = true;\n      }\n\n      function onResize() {\n        if (worker) {\n          // TODO this really shouldn't be immediate, because it is expensive\n          var obj = {\n            getBoundingClientRect: function () {\n              if (!isLibCanvas) {\n                return canvas.getBoundingClientRect();\n              }\n            }\n          };\n\n          resizer(obj);\n\n          worker.postMessage({\n            resize: {\n              width: obj.width,\n              height: obj.height\n            }\n          });\n          return;\n        }\n\n        // don't actually query the size here, since this\n        // can execute frequently and rapidly\n        size.width = size.height = null;\n      }\n\n      function done() {\n        animationObj = null;\n\n        if (allowResize) {\n          global.removeEventListener('resize', onResize);\n        }\n\n        if (isLibCanvas && canvas) {\n          document.body.removeChild(canvas);\n          canvas = null;\n          initialized = false;\n        }\n      }\n\n      if (allowResize) {\n        global.addEventListener('resize', onResize, false);\n      }\n\n      if (worker) {\n        return worker.fire(options, size, done);\n      }\n\n      return fireLocal(options, size, done);\n    }\n\n    fire.reset = function () {\n      if (worker) {\n        worker.reset();\n      }\n\n      if (animationObj) {\n        animationObj.reset();\n      }\n    };\n\n    return fire;\n  }\n\n  // Make default export lazy to defer worker creation until called.\n  var defaultFire;\n  function getDefaultFire() {\n    if (!defaultFire) {\n      defaultFire = confettiCannon(null, { useWorker: true, resize: true });\n    }\n    return defaultFire;\n  }\n\n  module.exports = function() {\n    return getDefaultFire().apply(this, arguments);\n  };\n  module.exports.reset = function() {\n    getDefaultFire().reset();\n  };\n  module.exports.create = confettiCannon;\n}((function () {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  return this || {};\n})(), module, false));\n\n// end source content\n\nexport default module.exports;\nexport var create = module.exports.create;\n","import confetti from \"canvas-confetti\";\r\nimport { CONFETTI_COLORS, PHONE_WIDTH, TEXT_COLORS } from \"./config.js\";\r\n\r\nexport const makeConfetti = function (that, amount, color = CONFETTI_COLORS[0], grav = 1) {\r\n    let amountOfParticles = amount === \"small\" ? 2 : 7;\r\n    let scale = amount === \"small\" ? 1.6 : 2;\r\n    let tick = amount === \"small\" ? 150 : 200;\r\n\r\n    if (window.innerWidth < PHONE_WIDTH) return;\r\n\r\n    const myCanvas = document.createElement(\"canvas\");\r\n    myCanvas.style.cssText += \"position: absolute; z-index: 5000; pointer-events: none;\";\r\n\r\n    that.appendChild(myCanvas);\r\n\r\n    const myConfetti = confetti.create(myCanvas, {\r\n        resize: true,\r\n        useWorker: true,\r\n    });\r\n    myConfetti({\r\n        particleCount: amountOfParticles,\r\n        spread: 30,\r\n        startVelocity: 10,\r\n        colors: color,\r\n        shapes: [\"square\"],\r\n        scalar: scale,\r\n        zIndex: 100000,\r\n        ticks: tick,\r\n        gravity: grav,\r\n    });\r\n};\r\n\r\nexport const generateTextColor = function (value) {\r\n    return TEXT_COLORS[value];\r\n};\r\n\r\nexport const generateAdjacentCordsArray = function (x, y, onlySides = false) {\r\n    x = +x;\r\n    y = +y;\r\n\r\n    if (onlySides) {\r\n        return [\r\n            x - 1 + \"x\" + y, // 2\r\n            x + \"x\" + (y - 1), // 4\r\n            x + \"x\" + (y + 1), // 6\r\n            x + 1 + \"x\" + y, // 8\r\n        ];\r\n    }\r\n\r\n    return [\r\n        x - 1 + \"x\" + (y - 1), // 1\r\n        x - 1 + \"x\" + y, // 2\r\n        x - 1 + \"x\" + (y + 1), // 3\r\n        x + \"x\" + (y - 1), // 4\r\n        x + \"x\" + y, // 5\r\n        x + \"x\" + (y + 1), // 6\r\n        x + 1 + \"x\" + (y - 1), // 7\r\n        x + 1 + \"x\" + y, // 8\r\n        x + 1 + \"x\" + (y + 1), // 9\r\n    ];\r\n};\r\n\r\nexport const getCellCords = function (element) {\r\n    const coords = element.classList[1].slice(12);\r\n    return coords;\r\n};\r\n\r\nexport const setDelayMs = async function (ms) {\r\n    try {\r\n        await new Promise(resolve => setTimeout(resolve, ms));\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n};\r\n","import { CELL_WIDTH, CELL_HEIGHT, PHONE_WIDTH } from \"./config.js\";\r\nimport { setDelayMs } from \"./helpers.js\";\r\n\r\nclass Grid {\r\n    #gameStyle = document.querySelector(\".game\").style;\r\n    #game = document.querySelector(\".game\");\r\n    #headerStyle = document.querySelector(\".header\").style;\r\n    #body = document.querySelector(\"body\").style;\r\n    #container = document.querySelector(\".container\").style;\r\n\r\n    #allCells = {};\r\n    #cellsNumbers;\r\n\r\n    createBoard(columns, rows, _, difficulty) {\r\n        this.#clearAllCells();\r\n        this.#game.innerHTML = \"\";\r\n        let cellWidth = CELL_WIDTH[difficulty];\r\n        let cellHeight = CELL_HEIGHT[difficulty];\r\n\r\n        if (window.innerWidth < PHONE_WIDTH) {\r\n            // cell dimensions in rems\r\n            cellWidth = cellHeight = Number(this.#calculateCellDimensions(columns, rows));\r\n\r\n            // container should be fixed to top of the screen\r\n            this.#container.cssText += `position: fixed; top: 0; left: 0; transform: translate(0,0); height: 100vh;`;\r\n\r\n            this.#gameStyle.cssText += `position: absolute; left: 50%; top: ${this.#calcMobileTopMargin(\r\n                rows,\r\n                cellWidth\r\n            )}rem; transform: translateX(-50%)`;\r\n\r\n            this.#headerStyle.width = `100%`;\r\n        } else {\r\n            this.#headerStyle.maxWidth = `${cellWidth * columns}rem`;\r\n        }\r\n\r\n        this.#cellsNumbers = {};\r\n\r\n        this.#gameStyle.cssText += `grid-template-columns: repeat( ${columns} , 1fr); grid-template-rows: repeat( ${rows} , 1fr); width: ${\r\n            cellWidth * columns\r\n        }rem; height: ${cellHeight * rows}rem`;\r\n\r\n        const markup = this.#generateCells(rows, columns, cellWidth);\r\n\r\n        this.#printToGameBoard(markup);\r\n\r\n        this.#generateCrossPattern(columns);\r\n\r\n        return this.#allCells;\r\n    }\r\n\r\n    #clearAllCells() {\r\n        for (const key in this.#allCells) {\r\n            delete this.#allCells[key];\r\n        }\r\n    }\r\n\r\n    setBackground(width) {\r\n        this.#body.backgroundColor = width < PHONE_WIDTH ? \"#578a34\" : \"#faf8ef\";\r\n    }\r\n\r\n    #calcMobileTopMargin(rows, cellWidth) {\r\n        const headerHeight = document.querySelector(\".header\").getBoundingClientRect().height;\r\n\r\n        const marginTop =\r\n            (window.innerHeight / 10 - (rows * cellWidth - (headerHeight / 10).toFixed(2))) / 2;\r\n\r\n        return marginTop.toFixed(2);\r\n    }\r\n\r\n    addWaterTo(cords, allCells) {\r\n        const element = allCells[cords];\r\n\r\n        if (element.classList.contains(\"game__cell--odd\")) {\r\n            element.style.cssText += \"background-color: #84c4f7; transition: all 3s;\";\r\n        } else if (element.classList.contains(\"game__cell--even\")) {\r\n            element.style.cssText += \"background-color: #8fcaf9; transition: all 3s;\";\r\n        }\r\n    }\r\n\r\n    async addGrassTo(cords, allCells) {\r\n        const element = allCells[cords];\r\n\r\n        element.style.cssText +=\r\n            \"border: none; box-shadow: none; transition: all 1.5s; background-color: #9db66a;\";\r\n\r\n        await setDelayMs(1500);\r\n        element.style.backgroundColor = \"#62ad50\";\r\n    }\r\n\r\n    getCellsNumbers() {\r\n        return this.#cellsNumbers;\r\n    }\r\n\r\n    #calculateCellDimensions(columns, rows) {\r\n        const height = ((window.innerHeight * 0.85) / rows / 10).toFixed(2);\r\n        const width = ((window.innerWidth * 0.85) / columns / 10).toFixed(2);\r\n\r\n        return height > width ? width : height;\r\n    }\r\n\r\n    #generateCells(rows, columns, cellWidth) {\r\n        for (let i = 0; i < rows; i++) {\r\n            for (let y = 0; y < columns; y++) {\r\n                const element = document.createElement(\"div\");\r\n                const cords = i + \"x\" + y;\r\n                element.classList.add(\"game__cell\", `game__cell--${cords}`);\r\n                element.style.fontSize = `${cellWidth * 0.7}rem`;\r\n                this.#cellsNumbers[cords] = 0;\r\n                this.#allCells[cords] = element;\r\n            }\r\n        }\r\n\r\n        return this.#allCells;\r\n    }\r\n\r\n    #printToGameBoard(arrayOfDivs) {\r\n        for (let key in arrayOfDivs) {\r\n            this.#game.appendChild(arrayOfDivs[key]);\r\n        }\r\n    }\r\n\r\n    #generateCrossPattern(columns) {\r\n        let counter = 0;\r\n        let rowNumber = columns - 1;\r\n\r\n        for (let key in this.#allCells) {\r\n            const el = this.#allCells[key];\r\n\r\n            counter % 2\r\n                ? el.classList.add(\"game__cell--even\")\r\n                : el.classList.add(\"game__cell--odd\");\r\n            if (counter === rowNumber) {\r\n                if (rowNumber === columns - 1) {\r\n                    rowNumber = columns;\r\n                    counter = 1;\r\n                } else if (rowNumber === columns) {\r\n                    rowNumber = columns - 1;\r\n                    counter = 0;\r\n                }\r\n            } else {\r\n                counter++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Grid();\r\n","import { FIRST_BORDER, BORDER_INITIAL, BORDER_CHANGED } from \"./config.js\";\r\nimport { generateAdjacentCordsArray } from \"./helpers.js\";\r\n\r\nclass Board {\r\n    #bombsPlacements = {};\r\n    #cellsPlacements = {};\r\n    #lastHighlighted;\r\n    #cellsWithBorders = {};\r\n\r\n    placeBombs(columns, rows, bombs, that) {\r\n        this.#protectCellsAroundClick(that);\r\n\r\n        while (bombs > 0) {\r\n            const xCord = Math.floor(Math.random() * rows);\r\n            const yCord = Math.floor(Math.random() * columns);\r\n            const cords = xCord + \"x\" + yCord;\r\n\r\n            if (!this.#bombsPlacements.hasOwnProperty(cords)) {\r\n                this.#bombsPlacements[cords] = true;\r\n                this.#cellsPlacements[cords] = 99;\r\n                this.#calcCellsAround(xCord, yCord);\r\n                bombs--;\r\n            }\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.#bombsPlacements = {};\r\n        this.#cellsPlacements = {};\r\n        this.#lastHighlighted = undefined;\r\n        this.#cellsWithBorders = {};\r\n    }\r\n    getCellsPlacementObj() {\r\n        return this.#cellsPlacements;\r\n    }\r\n\r\n    #cleanAllBorders(allCells) {\r\n        for (let cords in this.#cellsWithBorders) {\r\n            const elem = allCells[cords];\r\n            if (elem) {\r\n                elem.style.boxShadow = \"none\";\r\n            }\r\n        }\r\n\r\n        for (const prop of Object.getOwnPropertyNames(this.#cellsWithBorders)) {\r\n            delete this.#cellsWithBorders[prop];\r\n        }\r\n    }\r\n\r\n    #cellIsNumber(cell) {\r\n        return cell.textContent < 50 && cell.textContent > 0;\r\n    }\r\n\r\n    addCellBorders(allCells, cellsWithNumbers) {\r\n        this.#cleanAllBorders(allCells);\r\n\r\n        //print new borders\r\n        cellsWithNumbers.forEach(cords => {\r\n            const [x, y] = cords.split(\"x\");\r\n            const sideCordsArr = generateAdjacentCordsArray(x, y, true);\r\n\r\n            // firstly add all sides that needs border to the array\r\n            sideCordsArr.forEach((cords, index) => {\r\n                const cell = allCells[cords];\r\n                if (cell && !cell.classList.contains(\"clicked\") && !this.#cellIsNumber(cell)) {\r\n                    const borderSide = this.#getProperBorderSide(index);\r\n\r\n                    if (!this.#cellsWithBorders.hasOwnProperty(cords)) {\r\n                        this.#cellsWithBorders[cords] = []; // cords: [borderSide, borderSide]\r\n                    }\r\n                    if (!this.#cellsWithBorders[cords].includes(borderSide))\r\n                        this.#cellsWithBorders[cords].push(borderSide);\r\n                }\r\n            });\r\n        });\r\n\r\n        for (let cords in this.#cellsWithBorders) {\r\n            const sides = [\"left\", \"right\", \"bottom\", \"top\"];\r\n            const element = allCells[cords];\r\n            let borderValue = [FIRST_BORDER];\r\n            this.#cellsWithBorders[cords].forEach(side => {\r\n                borderValue.push(BORDER_CHANGED[side]);\r\n            });\r\n\r\n            sides.forEach(side => {\r\n                if (!this.#cellsWithBorders[cords].includes(side))\r\n                    borderValue.push(BORDER_INITIAL[side]);\r\n            });\r\n\r\n            const value = borderValue.join(\",\") + \";\";\r\n\r\n            element.style.cssText += `box-shadow: ${value}`;\r\n        }\r\n    }\r\n\r\n    #getProperBorderSide(index) {\r\n        let property = \"\";\r\n        switch (index) {\r\n            case 0:\r\n                property = \"bottom\";\r\n                break;\r\n\r\n            case 1:\r\n                property = \"right\";\r\n                break;\r\n\r\n            case 2:\r\n                property = \"left\";\r\n                break;\r\n\r\n            case 3:\r\n                property = \"top\";\r\n                break;\r\n        }\r\n        return property;\r\n    }\r\n\r\n    highlightCellsAround(that, allCells) {\r\n        let [x, y] = that.classList[1].slice(12).split(\"x\");\r\n        let cellsArr = generateAdjacentCordsArray(x, y);\r\n\r\n        if (\r\n            this.#lastHighlighted?.classList.contains(\"cell__overlay\") ||\r\n            this.#lastHighlighted?.textContent.length === 1\r\n        ) {\r\n            [x, y] = this.#lastHighlighted.classList[1].slice(12).split(\"x\");\r\n            cellsArr = generateAdjacentCordsArray(x, y);\r\n\r\n            cellsArr.forEach(cords => {\r\n                cellsArr[cords]?.classList.remove(\"cell__overlay\");\r\n            });\r\n            this.#lastHighlighted = undefined;\r\n            return;\r\n        }\r\n\r\n        if (that.classList.contains(\"clicked\") && !this.#cellIsNumber(that)) return;\r\n\r\n        cellsArr.forEach(cords => {\r\n            const element = allCells[cords];\r\n\r\n            if (!element?.classList.contains(\"clicked\") || element === that) {\r\n                element?.classList.add(\"cell__overlay\");\r\n            }\r\n            this.#lastHighlighted = that;\r\n        });\r\n    }\r\n\r\n    #protectCellsAroundClick(that) {\r\n        const [x, y] = that.classList[1]\r\n            .slice(12)\r\n            .split(\"x\")\r\n            .map(z => +z);\r\n\r\n        const cordsArr = generateAdjacentCordsArray(x, y);\r\n\r\n        cordsArr.forEach(cords => {\r\n            this.#bombsPlacements[cords] = true;\r\n        });\r\n    }\r\n\r\n    #calcCellsAround(x, y) {\r\n        const cordsArr = generateAdjacentCordsArray(x, y);\r\n\r\n        cordsArr.forEach((cords, index) => {\r\n            if (index !== 4) this.#increaseBombCounter(cords);\r\n        });\r\n    }\r\n\r\n    #increaseBombCounter(cords) {\r\n        if (this.#cellsPlacements.hasOwnProperty(cords)) {\r\n            this.#cellsPlacements[cords] += 1;\r\n            return;\r\n        }\r\n\r\n        this.#cellsPlacements[cords] = 1;\r\n        return;\r\n    }\r\n}\r\n\r\nexport default new Board();\r\n","import { CONFETTI_COLORS, PHONE_WIDTH } from \"./config.js\";\r\nimport {\r\n    makeConfetti,\r\n    generateTextColor,\r\n    generateAdjacentCordsArray,\r\n    setDelayMs,\r\n} from \"./helpers.js\";\r\n\r\nclass Cell {\r\n    #cellsWithNumbers = [];\r\n    #cellsQueue = [];\r\n    #cellsRevealed = [];\r\n    #flagsToDelete = [];\r\n    #bombAnimation;\r\n\r\n    reset() {\r\n        this.#cellsWithNumbers = [];\r\n        this.#cellsQueue = [];\r\n        this.#cellsRevealed = [];\r\n        this.#flagsToDelete = [];\r\n    }\r\n\r\n    animateNumberFadeOut(cords, allCells) {\r\n        const element = allCells[cords];\r\n        element.style.cssText += \"transition: all 0.3s; color: transparent;\";\r\n        setTimeout(this.#deleteNumber.bind(this, element), 300);\r\n    }\r\n\r\n    cancelBombAnimation() {\r\n        this.#bombAnimation = false;\r\n    }\r\n\r\n    async blowBombs(allCells, bombCords, cords) {\r\n        try {\r\n            this.#bombAnimation = true;\r\n\r\n            let firstCords = cords;\r\n\r\n            while (bombCords.length > 0 && this.#bombAnimation) {\r\n                const index = firstCords\r\n                    ? bombCords.indexOf(firstCords)\r\n                    : this.#generateRandomValue(0, bombCords.length);\r\n                const delay = this.#generateRandomValue(100, 600);\r\n                const random = this.#generateRandomValue(1, CONFETTI_COLORS.length);\r\n                const colors = CONFETTI_COLORS[random];\r\n                const coords = firstCords ? firstCords : bombCords[index];\r\n                const element = allCells[coords];\r\n\r\n                makeConfetti(element, \"small\", colors, 0.4);\r\n\r\n                element.classList.add(\"bomb\");\r\n                element.style.setProperty(\"--bomb-color\", colors[2]);\r\n                element.style.setProperty(\"--bomb-bg\", colors[1]);\r\n\r\n                setTimeout(function () {\r\n                    element.style.setProperty(\"--bomb-bg\", colors[0]);\r\n                }, 800);\r\n\r\n                bombCords.splice(index, 1);\r\n                firstCords = false;\r\n                await setDelayMs(delay);\r\n            }\r\n\r\n            return true;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    #deleteNumber(element) {\r\n        element.textContent = \"\";\r\n    }\r\n\r\n    #enqueueCords(cords) {\r\n        if (!this.#cellsRevealed.includes(cords) && !this.#cellsQueue.includes(cords)) {\r\n            this.#cellsQueue.push(cords);\r\n        }\r\n    }\r\n\r\n    getFlagsToDelete() {\r\n        const flags = [...this.#flagsToDelete];\r\n        this.#flagsToDelete.length = 0;\r\n        return flags;\r\n    }\r\n    #addFlagToDelete(element) {\r\n        if (this.hasFlag(element) && !this.#flagsToDelete.includes(element))\r\n            this.#flagsToDelete.push(element);\r\n    }\r\n\r\n    #markClicked(xyCord, cellsNumbers, allCells) {\r\n        const element = allCells[xyCord];\r\n\r\n        this.#addFlagToDelete(element);\r\n\r\n        element.classList.add(\"clicked\");\r\n        element.textContent = cellsNumbers[xyCord];\r\n        this.#cellsWithNumbers.push(xyCord);\r\n        element.style.setProperty(\"--color-text\", generateTextColor(cellsNumbers[xyCord]));\r\n        element.dataset.number = cellsNumbers[xyCord];\r\n\r\n        this.#cellsRevealed.push(xyCord);\r\n        makeConfetti(element);\r\n    }\r\n\r\n    revealEmptyCell(that, cords, state, allCells) {\r\n        that.classList.add(\"clicked\");\r\n        this.#cellsQueue.push(cords);\r\n\r\n        while (this.#cellsQueue.length > 0) {\r\n            this.#revealAdjacentCells(state, allCells);\r\n        }\r\n    }\r\n\r\n    #revealAdjacentCells(cellsNumbers, allCells) {\r\n        const [x, y] = this.#cellsQueue[0].split(\"x\").map(z => +z);\r\n        const outerCordsIndex = [0, 2, 6, 8];\r\n        const cordsArr = generateAdjacentCordsArray(x, y);\r\n        cordsArr.forEach((xyCords, i) => {\r\n            if (outerCordsIndex.includes(i)) {\r\n                if (cellsNumbers[xyCords] > 0 && cellsNumbers[xyCords] < 11) {\r\n                    this.#markClicked(xyCords, cellsNumbers, allCells);\r\n                }\r\n            }\r\n            if (!outerCordsIndex.includes(i)) {\r\n                if (cellsNumbers[xyCords] === 0) {\r\n                    const element = allCells[xyCords];\r\n\r\n                    element.classList.add(\"clicked\");\r\n                    this.#enqueueCords(xyCords);\r\n                    this.#addFlagToDelete(element);\r\n                } else if (cellsNumbers[xyCords] > 0 && cellsNumbers[xyCords] < 11) {\r\n                    this.#markClicked(xyCords, cellsNumbers, allCells);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.#cellsRevealed.push(this.#cellsQueue[0]);\r\n        this.#cellsQueue.splice(0, 1);\r\n    }\r\n\r\n    revealNumber(that, cords, clickedCellValue) {\r\n        that.textContent = clickedCellValue;\r\n        that.classList.add(\"clicked\");\r\n        that.style.setProperty(\"--color-text\", generateTextColor(clickedCellValue));\r\n        this.#cellsWithNumbers.push(cords);\r\n        makeConfetti(that, \"small\");\r\n    }\r\n\r\n    getCellsRevealed() {\r\n        return this.#cellsRevealed;\r\n    }\r\n\r\n    clearCellsRevealed() {\r\n        this.#cellsRevealed.length = 0;\r\n    }\r\n\r\n    getCellsWithNumbers() {\r\n        return this.#cellsWithNumbers;\r\n    }\r\n\r\n    deleteClickHandler(that, handler, handlerEvent) {\r\n        that.removeEventListener(`${handlerEvent}`, handler);\r\n        return;\r\n    }\r\n\r\n    addAllClickHandler(allCells, handler, mouseup) {\r\n        for (let key in allCells) {\r\n            const el = allCells[key];\r\n            el.addEventListener(\"mousedown\", handler);\r\n            el.addEventListener(\"mousedown\", mouseup);\r\n            el.addEventListener(\"mouseup\", mouseup);\r\n        }\r\n    }\r\n\r\n    addAllTouchHandler(allCells, handlerStart, handlerEnd) {\r\n        for (let key in allCells) {\r\n            const el = allCells[key];\r\n            el.addEventListener(\"touchstart\", handlerStart);\r\n            el.addEventListener(\"touchend\", handlerEnd);\r\n        }\r\n    }\r\n\r\n    async animateFlagDelete(that) {\r\n        try {\r\n            const flagElement = that.querySelector(\".game__cell--flag\");\r\n            if (!flagElement) return;\r\n            const element = flagElement?.cloneNode(true);\r\n            flagElement.style.display = \"none\";\r\n\r\n            // set beggining values and show cloned element\r\n\r\n            element.style.cssText += `z-index: 10000; font-size: 1.7rem; position: absolute; transition: all 0.3s; transform: scale(1) rotate(0deg) translate(-50%, -50%); animation: none; top: 50%; left: 50%; opacity: 1;`;\r\n            element.classList.remove(\".game__cell--flag\");\r\n            that.appendChild(element);\r\n\r\n            await setDelayMs(1);\r\n\r\n            // set middle values and await\r\n            let leftValue = this.#generateRandomValue(50, 150);\r\n            const leftDirection = this.#generateRandomValue(0, 1) ? \"-\" : \"\";\r\n            let rotateValue = this.#generateRandomValue(5, 90);\r\n\r\n            element.style.cssText += `transform: scale(1) rotate(${leftDirection}${rotateValue}deg); top: -${this.#generateRandomValue(\r\n                100,\r\n                300\r\n            )}%; left: ${leftDirection}${leftValue}%; `;\r\n            await setDelayMs(300);\r\n\r\n            // set ending values and await\r\n            element.style.cssText =\r\n                +`transition: all 0.5s; transform: scale(0) rotate(${leftDirection}${\r\n                    rotateValue * 1.2\r\n                }deg); top: ${this.#generateRandomValue(400, 600)}%; left: ${leftDirection}${\r\n                    leftValue * 1.2\r\n                }%; `;\r\n\r\n            await setDelayMs(500);\r\n            // clear div\r\n\r\n            that.innerHTML = \"\";\r\n            if (+that.dataset.number) that.textContent = that.dataset.number;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    hasFlag(that) {\r\n        return that.textContent.length > 1;\r\n    }\r\n\r\n    addFlag(that) {\r\n        const element = document.createElement(\"div\");\r\n\r\n        element.innerHTML = \"&#128681;\";\r\n\r\n        element.classList.add(\"game__cell--flag\");\r\n        that.appendChild(element);\r\n        setTimeout(() => {\r\n            element.style.cssText += \"top: 50%; opacity: 1;\";\r\n        }, 10);\r\n    }\r\n\r\n    #generateRandomValue(from, to) {\r\n        return Math.floor(Math.random() * (to - from) + from);\r\n    }\r\n}\r\n\r\nexport default new Cell();\r\n","class Statistics {\r\n    #timer = document.querySelector(\".statistics__timer-counter\");\r\n    #flags = document.querySelector(\".statistics__flags-counter\");\r\n    #select = document.querySelector(\"#difficulty\");\r\n    #timerValue = 0;\r\n    #interval;\r\n    #timerStartDate;\r\n\r\n    startTimer() {\r\n        this.#timerStartDate = new Date();\r\n        this.#interval = setInterval(this.#manageTimer.bind(this), 1000);\r\n    }\r\n\r\n    addClickHandler(handler) {\r\n        this.#select.addEventListener(\"change\", handler);\r\n    }\r\n\r\n    #manageTimer() {\r\n        this.#timerValue = Math.round((new Date() - this.#timerStartDate) / 1000);\r\n        this.#printTimer(this.#timerValue);\r\n    }\r\n\r\n    #printTimer(time) {\r\n        const timeValue = (time + \"\").padStart(3, \"0\");\r\n        this.#timer.textContent = timeValue;\r\n    }\r\n\r\n    printFlags(amount) {\r\n        this.#flags.textContent = amount;\r\n    }\r\n\r\n    cleanTimer(clean = true) {\r\n        clearInterval(this.#interval);\r\n        if (clean) {\r\n            this.#timerValue = 0;\r\n            this.#timerStartDate = undefined;\r\n            this.#printTimer(this.#timerValue);\r\n        }\r\n    }\r\n\r\n    getTimerValue() {\r\n        return this.#timerValue;\r\n    }\r\n}\r\n\r\nexport default new Statistics();\r\n","import { PHONE_WIDTH } from \"./config\";\r\n\r\nclass Score {\r\n    #highscoreLabel = document.querySelector(\".highscore__label\");\r\n    #actualScoreLabel = document.querySelector(\".actual-score__label\");\r\n    #overlay = document.querySelector(\".overlay\");\r\n    #playAgainBtn = document.querySelector(\".summary__btn\");\r\n    #popupWindow = document.querySelector(\".summary\");\r\n    #popupDisplayed = false;\r\n\r\n    addHandlerToBtn(handler) {\r\n        this.#playAgainBtn.addEventListener(\"click\", handler);\r\n    }\r\n\r\n    isPopupDisplayed() {\r\n        return this.#popupDisplayed;\r\n    }\r\n\r\n    async toggleOverlayAndPopup() {\r\n        try {\r\n            const summaryWidth = window.innerWidth < PHONE_WIDTH ? \"--summary-width: 90vw;\" : \"\";\r\n\r\n            const overlay = this.#overlay;\r\n            const popup = this.#popupWindow;\r\n\r\n            if (!this.#popupDisplayed) {\r\n                this.#popupDisplayed = true;\r\n\r\n                overlay.style.cssText = `visibility: visible; opacity: 1;`;\r\n                popup.style.cssText = `${summaryWidth} pointer-events: auto; visibility: visible; opacity: 1;`;\r\n\r\n                return;\r\n            }\r\n\r\n            this.#popupDisplayed = false;\r\n\r\n            overlay.style.cssText = `visibility: hidden; opacity: 0;`;\r\n            popup.style.cssText = `${summaryWidth}pointer-events: none; visibility: hidden; opacity: 0;`;\r\n\r\n            return;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    printActualscore(score) {\r\n        const actualScore = (score + \"\").padStart(3, \"0\");\r\n        this.#actualScoreLabel.textContent = actualScore;\r\n    }\r\n\r\n    printHighscore(score) {\r\n        const highScore = (score + \"\").padStart(3, \"0\");\r\n        this.#highscoreLabel.textContent = highScore;\r\n    }\r\n}\r\n\r\nexport default new Score();\r\n","import State from \"./js/model.js\";\r\nimport Grid from \"./js/gridView.js\";\r\nimport Board from \"./js/boardView.js\";\r\nimport Cell from \"./js/cellView.js\";\r\nimport Statistics from \"./js/statisticsView.js\";\r\nimport Score from \"./js/scoreView\";\r\nimport { getCellCords, setDelayMs } from \"./js/helpers.js\";\r\nimport { LONG_CLICK_MS } from \"./js/config.js\";\r\n\r\n// TODO:\r\n// optimize confeti on phones. Think about adding smaller amount of confetti everywhere when its on phone, changing all things to reduce performance problems\r\n\r\nfunction mouseClickController(e) {\r\n    e.preventDefault();\r\n    // 1 - LMB, 3 - RMB\r\n    if (e.which === 1) leftKeyClickController.call(this);\r\n    if (e.which === 3) rightKeyClickController.call(this);\r\n\r\n    if (State.isGameFinished()) finishedGameController();\r\n}\r\n\r\nfunction touchStartController(e) {\r\n    State.startTouchTimer();\r\n    const timeoutID = setTimeout(() => rightKeyClickController.call(this), LONG_CLICK_MS);\r\n    State.setTimeoutID(timeoutID);\r\n}\r\nfunction touchEndController(e) {\r\n    if (State.endTouchTimer() < LONG_CLICK_MS) {\r\n        State.resetTimeoutID();\r\n        if (Cell.hasFlag(this)) {\r\n            rightKeyClickController.call(this);\r\n\r\n            if (State.isGameFinished()) finishedGameController();\r\n\r\n            return;\r\n        }\r\n\r\n        leftKeyClickController.call(this);\r\n\r\n        if (State.isGameFinished()) finishedGameController();\r\n\r\n        return;\r\n    }\r\n}\r\n\r\nfunction leftKeyClickController() {\r\n    if (State.getMovesCounter() === 0) {\r\n        const settings = State.getSettings();\r\n        Board.placeBombs(...settings, this);\r\n\r\n        State.updateCellsNumbers(Board.getCellsPlacementObj());\r\n\r\n        Statistics.startTimer();\r\n    }\r\n\r\n    State.movesCounterAdd();\r\n    const cords = this.classList[1].slice(12);\r\n    const clickedCellValue = State.getCellNumber(cords);\r\n    const allCells = State.getAllCells();\r\n\r\n    if (State.cellIsNumber(cords) && !Cell.hasFlag(this) && !State.cordsHaveFlag(cords)) {\r\n        Cell.revealNumber(this, cords, clickedCellValue);\r\n        Board.addCellBorders(allCells, Cell.getCellsWithNumbers());\r\n        deleteAllHandlers(this);\r\n        State.saveOpenedCells([cords]);\r\n        return;\r\n    }\r\n\r\n    if (clickedCellValue === 0 && !Cell.hasFlag(this) && !State.cordsHaveFlag(cords)) {\r\n        Cell.revealEmptyCell(this, cords, State.getCellsNumbers(), allCells);\r\n        Board.addCellBorders(allCells, Cell.getCellsWithNumbers());\r\n\r\n        State.saveOpenedCells(Cell.getCellsRevealed());\r\n\r\n        Cell.getFlagsToDelete().forEach(el => {\r\n            State.deleteFlagCords(getCellCords(el));\r\n            Statistics.printFlags(State.increaseFlagCounter());\r\n            Cell.animateFlagDelete(el);\r\n        });\r\n\r\n        const cellsRevealed = Cell.getCellsRevealed();\r\n        cellsRevealed.forEach(cords => {\r\n            const element = allCells[cords];\r\n            deleteAllHandlers(element);\r\n        });\r\n\r\n        Cell.clearCellsRevealed();\r\n\r\n        return;\r\n    }\r\n\r\n    if (clickedCellValue > 50 && !Cell.hasFlag(this) && !State.cordsHaveFlag(cords)) {\r\n        endGameController(cords);\r\n        return;\r\n    }\r\n}\r\n\r\nfunction middleKeyClickController(e) {\r\n    if (e.which === 2) Board.highlightCellsAround(this, State.getAllCells());\r\n}\r\n\r\nasync function rightKeyClickController() {\r\n    try {\r\n        const cords = this.classList[1].slice(12);\r\n        if (State.flagCordsAreQueued(cords)) return;\r\n\r\n        State.addFlagCordsToQueue(cords);\r\n\r\n        if (Cell.hasFlag(this) && State.cordsHaveFlag(cords)) {\r\n            Statistics.printFlags(State.increaseFlagCounter());\r\n            await Cell.animateFlagDelete(this);\r\n            State.deleteFlagCords(cords);\r\n            State.deleteCordsFromQueue(cords);\r\n            return;\r\n        } else {\r\n            if (!State.getFlagsCounter()) return;\r\n            Statistics.printFlags(State.decreaseFlagCounter());\r\n            State.addFlagCords(cords);\r\n            Cell.addFlag(this);\r\n            State.deleteCordsFromQueue(cords);\r\n            return;\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nasync function endGameController(cords) {\r\n    try {\r\n        Statistics.cleanTimer();\r\n        State.getElementsWithFlags().forEach(el => {\r\n            Cell.animateFlagDelete(el);\r\n        });\r\n\r\n        const allCells = State.getAllCells();\r\n\r\n        const bombCords = State.getAllCellsWithBombs();\r\n\r\n        // Add skip animation handler to all cells\r\n        setTimeout(function () {\r\n            if (State.deviceIsPhone()) {\r\n                Cell.addAllTouchHandler(allCells, skipEndAnimation);\r\n            } else {\r\n                Cell.addAllClickHandler(allCells, skipEndAnimation);\r\n            }\r\n        }, 1000);\r\n\r\n        for (let key in allCells) {\r\n            const cellElement = allCells[key];\r\n            if (cellElement.classList.contains(\"clicked\")) continue;\r\n\r\n            Cell.deleteClickHandler(cellElement, middleKeyClickController, \"mouseup\");\r\n            Cell.deleteClickHandler(cellElement, middleKeyClickController, \"mousedown\");\r\n\r\n            deleteAllHandlers(cellElement);\r\n        }\r\n\r\n        await Cell.blowBombs(allCells, bombCords, cords);\r\n\r\n        if (Score.isPopupDisplayed() || State.getMovesCounter() <= 1) return;\r\n\r\n        skipEndAnimation();\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction deleteAllHandlers(cellElement) {\r\n    Cell.deleteClickHandler(cellElement, mouseClickController, \"mousedown\");\r\n    Cell.deleteClickHandler(cellElement, touchStartController, \"touchstart\");\r\n    Cell.deleteClickHandler(cellElement, touchEndController, \"touchend\");\r\n}\r\n\r\nasync function skipEndAnimation() {\r\n    try {\r\n        if (Score.isPopupDisplayed()) return;\r\n        await setDelayMs(1);\r\n        Score.toggleOverlayAndPopup();\r\n        Score.addHandlerToBtn(restartGameController);\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\nasync function finishedGameController() {\r\n    try {\r\n        const allCells = State.getAllCells();\r\n        // STOP STOPER AND SAVE TIME\r\n        Statistics.cleanTimer(false);\r\n        const actualTime = Statistics.getTimerValue();\r\n        // AlL FLAGS HAS TO BE DELETED\r\n        State.getElementsWithFlags().forEach(el => {\r\n            Cell.animateFlagDelete(el);\r\n        });\r\n        // DELETE ALL NUMBERS FROM CELLS\r\n        const numberCells = State.getAllCellsWithNumbers();\r\n\r\n        numberCells.forEach(cords => {\r\n            Cell.animateNumberFadeOut(cords, allCells);\r\n            Grid.addWaterTo(cords, allCells);\r\n        });\r\n\r\n        // COLOR ALL CELLS WITH BOMBS WITH THE SAME GREEN COLOR\r\n        // TODO: THINK ABOUT ADDING SOME FLOWERS TO ALL GREEN CELLS THAT ARE LEFT\r\n\r\n        const bombCells = State.getAllCellsWithBombs();\r\n\r\n        bombCells.forEach(cords => Grid.addGrassTo(cords, allCells));\r\n\r\n        Score.printActualscore(actualTime);\r\n        if (State.checkForHighScore(actualTime)) {\r\n            State.saveHighScore(actualTime);\r\n            Score.printHighscore(actualTime);\r\n        }\r\n\r\n        await setDelayMs(4000);\r\n\r\n        Score.toggleOverlayAndPopup();\r\n        Score.addHandlerToBtn(restartGameController);\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction restartGameController() {\r\n    Cell.cancelBombAnimation();\r\n\r\n    gameInit(State.getActualDifficulty());\r\n    Score.toggleOverlayAndPopup();\r\n}\r\n\r\nfunction gameDifficultyController(event) {\r\n    const diff = event.target.value;\r\n    gameInit(diff);\r\n}\r\n\r\nfunction gameInit(diff) {\r\n    State.reset();\r\n    Board.reset();\r\n    Cell.reset();\r\n    Statistics.cleanTimer();\r\n    State.setActualDifficulty(diff);\r\n    Score.printHighscore(State.getHighscore());\r\n\r\n    const settings = State.getSettings();\r\n\r\n    const allCells = Grid.createBoard(...settings, diff);\r\n    State.setCellsNumbers(Grid.getCellsNumbers());\r\n    State.setAllCells(allCells);\r\n    Statistics.printFlags(State.setFlagCounter(diff));\r\n    if (State.deviceIsPhone()) {\r\n        Cell.addAllTouchHandler(allCells, touchStartController, touchEndController);\r\n    } else {\r\n        Cell.addAllClickHandler(allCells, mouseClickController, middleKeyClickController);\r\n    }\r\n    Statistics.addClickHandler(gameDifficultyController);\r\n}\r\n\r\nState.setClientWidth(window.innerWidth);\r\nGrid.setBackground(window.innerWidth);\r\nState.getScoreFromLocalStorage();\r\n\r\ngameInit(\"med\");\r\n"],"names":["$9dfdde2870d5f6f9$export$172f64dec85407f2","easy","med","hard","$9dfdde2870d5f6f9$export$19e10527eabc081e","$9dfdde2870d5f6f9$export$54daf48dd7b8bb2","$9dfdde2870d5f6f9$export$78dafc18d6355ced","$9dfdde2870d5f6f9$export$fa8a873133bc727c","top","right","bottom","left","$9dfdde2870d5f6f9$export$2a474a6924bfecc7","$f381a3c3b9cf5311$export$2e2bcd8739ae039","difficulty","phoneDifficulty","flagCordsQueue","cellsNumbers","movesCounter","flagCounter","actualDifficulty","unopenedCellsCounter","unopenedCells","flagCords","bombCells","highScore","clientWidth","startTouch","timeoutID","allCells","getHighscore","this","setAllCells","obj","getSettings","deviceIsPhone","setClientWidth","width","getScoreFromLocalStorage","data","localStorage","getItem","JSON","parse","startTouchTimer","Date","setTimeoutID","timeoutId","resetTimeoutID","clearTimeout","undefined","endTouchTimer","saveToLocalStorage","setItem","stringify","checkForHighScore","score","saveHighScore","getAllCellsWithBombs","key","push","flagCordsAreQueued","cords","includes","addFlagCordsToQueue","deleteCordsFromQueue","index","indexOf","splice","getAllCellsWithNumbers","cellsWithNumbers","cordsHaveFlag","getElementsWithFlags","map","getFlagsCounter","deleteFlagCords","addFlagCords","setFlagCounter","diff","isGameFinished","length","saveOpenedCells","forEach","el","setActualDifficulty","setUnopenedCellsCounter","settingsObj","value","reset","getActualDifficulty","increaseFlagCounter","decreaseFlagCounter","cellIsNumber","getCellNumber","movesCounterAdd","getMovesCounter","getAllCells","setCellsNumbers","getCellsNumbers","updateCellsNumbers","hasOwnProperty","$947b03da4811c942$var$module","main","global","module1","isWorker","workerSize","canUseWorker","Worker","Blob","Promise","OffscreenCanvas","OffscreenCanvasRenderingContext2D","HTMLCanvasElement","prototype","transferControlToOffscreen","URL","createObjectURL","noop","promise","func","ModulePromise","exports","Prom","frame","cancel","TIME","frames","lastFrameTime","worker1","prom","resolves","defaultFire","raf","Math","floor","requestAnimationFrame","cancelAnimationFrame","cb","id","random","onFrame","time","setTimeout","timer","getWorker","code","toString","join","e","console","warn","worker","execute","options","callback","postMessage","init","canvas","offscreen","fire","size","done","slice","resolve","workerDone","msg","removeEventListener","addEventListener","bind","decorate","defaults","particleCount","angle","spread","startVelocity","decay","gravity","drift","ticks","x","y","shapes","zIndex","colors","disableForReducedMotion","scalar","prop","name","transform","val","convert","onlyPositiveInt","number","toDecimal","str","parseInt","colorsToRgb","hexToRgb","String","replace","r","substring","g","b","setCanvasWindowSize","document","documentElement","height","clientHeight","setCanvasRectSize","rect","getBoundingClientRect","animate","fettis1","resizer","animationFrame","destroy","animatingFettis","context","getContext","onDone","clearRect","update","filter","fetti","cos","angle2D","velocity","sin","wobble","wobbleSpeed","tiltAngle","tiltSin","tiltCos","wobbleX","wobbleY","progress","tick","totalTicks","x1","y1","x2","y2","fillStyle","color","beginPath","shape","ellipse","abs","ovalScalar","PI","radiusX","radiusY","rotation","startAngle","endAngle","antiClockwise","save","translate","rotate","scale","arc","restore","moveTo","lineTo","closePath","fill","updateFetti","addFettis","fettis","concat","confettiCannon","globalOpts","animationObj","isLibCanvas","allowResize","globalDisableForReducedMotion","Boolean","initialized","__confetti_initialized","preferLessMotion","matchMedia","matches","fireLocal","opts","radAngle","radSpread","min","max","Number","origin","Object","getOrigin","temp","startX","startY","createElement","style","position","pointerEvents","getCanvas","body","appendChild","onResize","resize","removeChild","getDefaultFire","useWorker","apply","arguments","create","window","self","$947b03da4811c942$export$2e2bcd8739ae039","$55e824ff15c161b3$export$30e29fe2be4f6c76","that","amount","grav","amountOfParticles","innerWidth","myCanvas","cssText","myConfetti","$55e824ff15c161b3$export$10a10e7cd1193377","$55e824ff15c161b3$export$c3637bd6b54b78c4","onlySides","$55e824ff15c161b3$export$582b8709141ae6a7","async","ms","err","$d9e8c55ecc74a0dc$export$2e2bcd8739ae039","gameStyle","querySelector","game","headerStyle","container","createBoard","columns","rows","_","clearAllCells","innerHTML","cellWidth","cellHeight","calculateCellDimensions","calcMobileTopMargin","maxWidth","markup","generateCells","printToGameBoard","generateCrossPattern","setBackground","backgroundColor","headerHeight","innerHeight","toFixed","addWaterTo","element","classList","contains","rows1","rows2","columns1","cellWidth1","i","add","fontSize","arrayOfDivs","columns2","counter","rowNumber","$161634b57841b16b$export$2e2bcd8739ae039","bombsPlacements","cellsPlacements","lastHighlighted","cellsWithBorders","placeBombs","bombs","protectCellsAroundClick","xCord","yCord","calcCellsAround","getCellsPlacementObj","cleanAllBorders","elem","boxShadow","getOwnPropertyNames","cell","textContent","addCellBorders","allCells1","cords2","split","cell1","borderSide","getProperBorderSide","cords1","sides","borderValue","side","property","highlightCellsAround","allCells2","cellsArr","remove","z","index1","increaseBombCounter","$4e3e814294d653da$export$2e2bcd8739ae039","cellsQueue","cellsRevealed","flagsToDelete","bombAnimation","animateNumberFadeOut","deleteNumber","cancelBombAnimation","bombCords","firstCords","generateRandomValue","delay","setProperty","log","enqueueCords","getFlagsToDelete","flags","addFlagToDelete","element1","hasFlag","markClicked","xyCord","dataset","revealEmptyCell","state","revealAdjacentCells","cellsNumbers1","outerCordsIndex","xyCords","element2","revealNumber","clickedCellValue","getCellsRevealed","clearCellsRevealed","getCellsWithNumbers","deleteClickHandler","handler","handlerEvent","addAllClickHandler","allCells3","mouseup","addAllTouchHandler","allCells4","handlerStart","handlerEnd","flagElement","element3","cloneNode","display","leftValue","leftDirection","rotateValue","addFlag","element4","from","to","$44ba5ad264684943$export$2e2bcd8739ae039","select","timerValue","interval","timerStartDate","startTimer","setInterval","manageTimer","addClickHandler","round","printTimer","timeValue","padStart","printFlags","cleanTimer","clean","clearInterval","getTimerValue","$6d868dbfd2aa423b$export$2e2bcd8739ae039","highscoreLabel","actualScoreLabel","overlay","playAgainBtn","popupWindow","popupDisplayed","addHandlerToBtn","isPopupDisplayed","summaryWidth","popup","printActualscore","actualScore","printHighscore","$c1ce9d969bfa6909$var$mouseClickController","preventDefault","which","$c1ce9d969bfa6909$var$leftKeyClickController","call","$c1ce9d969bfa6909$var$rightKeyClickController","$c1ce9d969bfa6909$var$finishedGameController","$c1ce9d969bfa6909$var$touchStartController","$c1ce9d969bfa6909$var$touchEndController","settings","$c1ce9d969bfa6909$var$deleteAllHandlers","animateFlagDelete","$c1ce9d969bfa6909$var$skipEndAnimation","cellElement","$c1ce9d969bfa6909$var$middleKeyClickController","blowBombs","$c1ce9d969bfa6909$var$endGameController","toggleOverlayAndPopup","$c1ce9d969bfa6909$var$restartGameController","actualTime","addGrassTo","$c1ce9d969bfa6909$var$gameInit","$c1ce9d969bfa6909$var$gameDifficultyController","event","target"],"version":3,"file":"index.7d571d1c.js.map"}